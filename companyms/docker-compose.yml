services:
  postgres:
    image: postgres # Pin to a specific Postgres version (e.g., 15, 14, etc.)
    container_name: postgres_container
    restart: unless-stopped
    ports:
      - "5432:5432" # Only if you need external access. Remove for better security within Docker.
    environment:
      POSTGRES_USER: chinmay
      POSTGRES_PASSWORD: password  # Use a stronger password in production!
      POSTGRES_DB: jobapp # Specify a database name
      PGDATA: /var/lib/postgresql/data # Standard path; no need to change unless you have a specific reason
    volumes:
      - postgres_data:/var/lib/postgresql/data # Use a named volume for data persistence
    networks:
      - postgres_network

  pgadmin:
    image: dpage/pgadmin4:latest  # Or pin to a specific pgAdmin version
    container_name: pgadmin_container
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: chinmay@example.com
      PGADMIN_DEFAULT_PASSWORD: password  # Use a stronger password in production!
      PGADMIN_CONFIG_SERVER_MODE: 'False' # Good to have if you don't need server mode
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin # Use a named volume
    networks:
      - postgres_network

  configserverms:
    image: chinmayabhyankar/configserverms:latest
    container_name: configserverms
    ports:
      - "8080:8080"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  servicereg:
    image: chinmayabhyankar/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - zipkin
      - postgres_container
      - pgadmin
    networks:
      - microservice-network
      - postgres_network

  companyms:
    image: chinmayabhyankar/companyms:latest
    container_name: company
    ports:
      - "8081:8081"
    depends_on:
      - servicereg
      - configserverms
    networks:
      - microservice-network
      - postgres_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka

  jobms:
    image: chinmayabhyankar/jobms:latest
    container_name: job
    ports:
      - "8082:8082"
    depends_on:
      - servicereg
      - configserverms
    networks:
      - microservice-network
      - postgres_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka

  reviewms:
    image: chinmayabhyankar/reviewms:latest
    container_name: review
    ports:
      - "8083:8083"
    depends_on:
      - servicereg
      - configserverms
    networks:
      - microservice-network
      - postgres_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - postgres_network

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres_network

networks:
  postgres_network: # More descriptive name
    driver: bridge
  microservice-network:
    driver: bridge

volumes:
  postgres_data: # Named volume for Postgres data
  pgadmin_data: # Named volume for pgAdmin data
